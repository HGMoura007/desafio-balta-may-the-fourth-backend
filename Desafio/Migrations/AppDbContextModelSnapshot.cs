// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diretor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Episodio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Produtor")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoAbertura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("FilmeNaveEstelar", b =>
                {
                    b.Property<int>("FilmesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NavesEstelaresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmesId", "NavesEstelaresId");

                    b.HasIndex("NavesEstelaresId");

                    b.ToTable("FilmeNaveEstelar");
                });

            modelBuilder.Entity("FilmePersonagem", b =>
                {
                    b.Property<int>("FilmesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonagensId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmesId", "PersonagensId");

                    b.HasIndex("PersonagensId");

                    b.ToTable("FilmePersonagem");
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.Property<int>("FilmesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmesId", "PlanetasId");

                    b.HasIndex("PlanetasId");

                    b.ToTable("FilmePlaneta");
                });

            modelBuilder.Entity("FilmeVeiculo", b =>
                {
                    b.Property<int>("FilmesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VeículosFilmeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmesId", "VeículosFilmeId");

                    b.HasIndex("VeículosFilmeId");

                    b.ToTable("FilmeVeiculo");
                });

            modelBuilder.Entity("NaveEstelar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapacidadeCarga")
                        .HasColumnType("TEXT");

                    b.Property<string>("Classe")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassificacaoHyperDrive")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comprimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Consumiveis")
                        .HasColumnType("TEXT");

                    b.Property<string>("Custo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fabricante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mglt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passageiros")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tripulacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("VelocidadeMaxima")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NavesEstelares");
                });

            modelBuilder.Entity("Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Altura")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnoNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorCabelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorOlho")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorPele")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pesa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanetaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanetaId");

                    b.ToTable("Personagens");
                });

            modelBuilder.Entity("Planeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clima")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diametro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gravidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("PeriodoOrbita")
                        .HasColumnType("TEXT");

                    b.Property<string>("PeriodoRotacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Populacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("SuperficeAquatica")
                        .HasColumnType("TEXT");

                    b.Property<string>("Terreno")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Planetas");
                });

            modelBuilder.Entity("Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapacidadeCarga")
                        .HasColumnType("TEXT");

                    b.Property<string>("Classe")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comprimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Consumiveis")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustoEmCredito")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fabricante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passageiros")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tripulacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("VelocidadeMaxima")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("FilmeNaveEstelar", b =>
                {
                    b.HasOne("Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaveEstelar", null)
                        .WithMany()
                        .HasForeignKey("NavesEstelaresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmePersonagem", b =>
                {
                    b.HasOne("Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personagem", null)
                        .WithMany()
                        .HasForeignKey("PersonagensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.HasOne("Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planeta", null)
                        .WithMany()
                        .HasForeignKey("PlanetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmeVeiculo", b =>
                {
                    b.HasOne("Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeículosFilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Personagem", b =>
                {
                    b.HasOne("Planeta", "Planeta")
                        .WithMany("Personagens")
                        .HasForeignKey("PlanetaId");

                    b.Navigation("Planeta");
                });

            modelBuilder.Entity("Planeta", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
